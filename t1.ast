TranslationUnitDecl 0x284ab60 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x284b058 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x284adb0 '__int128'
|-TypedefDecl 0x284b0b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x284add0 'unsigned __int128'
|-TypedefDecl 0x284b148 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x284b110 'char *'
|   `-BuiltinType 0x284abf0 'char'
|-TypedefDecl 0x284b3f8 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x284b3a0 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x284b220 'struct __va_list_tag'
|     `-Record 0x284b198 '__va_list_tag'
`-FunctionDecl 0x284b498 </home/paul/clang-ast/t1.c:1:1, line:6:1> line:1:1 fred 'int ()'
  `-CompoundStmt 0x284b830 <col:7, line:6:1>
    |-DeclStmt 0x284b678 <line:2:1, col:8>
    | |-VarDecl 0x284b590 <col:1, col:5> col:5 used i 'int'
    | `-VarDecl 0x284b600 <col:1, col:7> col:7 used j 'int'
    |-BinaryOperator 0x284b6d8 <line:3:1, col:3> 'int' '='
    | |-DeclRefExpr 0x284b690 <col:1> 'int' lvalue Var 0x284b600 'j' 'int'
    | `-IntegerLiteral 0x284b6b8 <col:3> 'int' 9
    |-BinaryOperator 0x284b7b0 <line:4:2, col:6> 'int' '='
    | |-DeclRefExpr 0x284b700 <col:2> 'int' lvalue Var 0x284b590 'i' 'int'
    | `-BinaryOperator 0x284b788 <col:4, col:6> 'int' '+'
    |   |-IntegerLiteral 0x284b728 <col:4> 'int' 5
    |   `-ImplicitCastExpr 0x284b770 <col:6> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x284b748 <col:6> 'int' lvalue Var 0x284b600 'j' 'int'
    `-ReturnStmt 0x284b818 <line:5:1, col:8>
      `-ImplicitCastExpr 0x284b800 <col:8> 'int' <LValueToRValue>
        `-DeclRefExpr 0x284b7d8 <col:8> 'int' lvalue Var 0x284b590 'i' 'int'
