TranslationUnitDecl 0x2492b60 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2493058 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2492db0 '__int128'
|-TypedefDecl 0x24930b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2492dd0 'unsigned __int128'
|-TypedefDecl 0x2493148 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2493110 'char *'
|   `-BuiltinType 0x2492bf0 'char'
|-TypedefDecl 0x24933f8 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x24933a0 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x2493220 'struct __va_list_tag'
|     `-Record 0x2493198 '__va_list_tag'
`-FunctionDecl 0x2493498 </home/paul/clang-ast/t1.c:1:1, line:6:1> line:1:1 fred 'int ()'
  `-CompoundStmt 0x2493850 <col:7, line:6:1>
    |-DeclStmt 0x2493698 <line:2:1, col:10>
    | |-VarDecl 0x2493590 <col:1, col:7> col:5 used i 'int' cinit
    | | `-IntegerLiteral 0x24935f0 <col:7> 'int' 8
    | `-VarDecl 0x2493620 <col:1, col:9> col:9 used j 'int'
    |-BinaryOperator 0x24936f8 <line:3:1, col:3> 'int' '='
    | |-DeclRefExpr 0x24936b0 <col:1> 'int' lvalue Var 0x2493620 'j' 'int'
    | `-IntegerLiteral 0x24936d8 <col:3> 'int' 9
    |-BinaryOperator 0x24937d0 <line:4:2, col:6> 'int' '='
    | |-DeclRefExpr 0x2493720 <col:2> 'int' lvalue Var 0x2493590 'i' 'int'
    | `-BinaryOperator 0x24937a8 <col:4, col:6> 'int' '+'
    |   |-IntegerLiteral 0x2493748 <col:4> 'int' 5
    |   `-ImplicitCastExpr 0x2493790 <col:6> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x2493768 <col:6> 'int' lvalue Var 0x2493620 'j' 'int'
    `-ReturnStmt 0x2493838 <line:5:1, col:8>
      `-ImplicitCastExpr 0x2493820 <col:8> 'int' <LValueToRValue>
        `-DeclRefExpr 0x24937f8 <col:8> 'int' lvalue Var 0x2493590 'i' 'int'
